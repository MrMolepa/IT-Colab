@extends('layouts.admin')

@section('content')
<div class="main">
    <!-- MAIN CONTENT -->
    <div class="main-content">
        <div class="container-fluid">
            <h3 class="page-title">Menu Management</h3>
            <div class="row">
                <div class="col-md-12">
                    <!-- PANEL NO CONTROLS -->
                    <div class="panel panel-headline">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="custom-tabs-line tabs-line-bottom left-aligned">
                                        <ul class="nav" role="tablist">
                                            <li class="active">
                                                <a href="#tab-menus" role="tab" data-toggle="tab">Menus</a>
                                            </li>
                                        </ul>
                                    </div>
                                    
                                    <div class="tab-content">
                                        <!-- MENUS TAB -->
                                        <div class="tab-pane fade in active" id="tab-menus">
                                            <button type="button" class="btn btn-primary" id="addMenuBtn">
                                                <i class="fa fa-plus"></i> Menu
                                            </button>

                                            <table class="table table-striped" id="menusTable">
                                                <thead>
                                                    <tr>
                                                        <th>ID</th>
                                                        <th>Name</th>
                                                        <th>Route</th>
                                                        <th>Icon</th>
                                                        <th>Order</th>
                                                        <th>Parent</th>
                                                        <th>Guard</th>
                                                        <th>Status</th>
                                                        <th>Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- END PANEL NO CONTROLS -->
                </div>
            </div>
        </div>
    </div>
</div>
<!-- END MAIN CONTENT -->

@include('admin.menus._form')
@include('admin.menus._permissions')

@endsection

@push('scripts')
<script>
    // TOASTER AND NOTIFICATION SETUP
    toastr.options = {
        closeButton: true,
        newestOnTop: false,
        progressBar: true,
        positionClass: "toast-top-center",
        preventDuplicates: false,
        onclick: null,
        showDuration: "3000",
        hideDuration: "8000",
        timeOut: "10000",
        extendedTimeOut: "8000",
        showEasing: "swing",
        hideEasing: "linear",
        showMethod: "fadeIn",
        hideMethod: "fadeOut",
    };

    $(document).ready(function() {
        $.ajaxSetup({
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            }
        });

        let table = $('#menusTable').DataTable({
            processing: true,
            serverSide: true,
            ajax: "{{ route('admin.menus.index') }}",
            columns: [
                {data: 'id', name: 'id'},
                {data: 'name', name: 'name'},
                {data: 'route', name: 'route'},
                {data: 'icon', name: 'icon'},
                {data: 'order', name: 'order'},
                {data: 'parent_name', name: 'parent.name'},
                {data: 'guard_name', name: 'guard_name'},
                {data: 'status', name: 'status'},
                {
                    data: 'actions',
                    name: 'actions',
                    orderable: false,
                    searchable: false
                }
            ]
        });

        // Helper function to fill form fields
        function fillForm(data, formId) {
            const form = $(formId);// get the form element
            $.each(data, function(key, value) {
                let field = $('[name="' + key + '"]');// get the form field by name
                
                if (field.is(':checkbox')) {
                    field.prop('checked', !!value);// set checked propertty for checkbox 
                } else if (field.is(':radio')) {
                    $('input[name="' + key + '"][value="' + value + '"]').prop('checked', true);// set checked property for radio buttons
                } else {
                    field.val(value);// set value for other input types
                }
            });
        }

        // Open modal for Add
        $('#addMenuBtn').click(function() {
            $('#menuForm')[0].reset();
            $('#menu_id').val('');
            $('#menuModalTitle').text('Add Menu');
            $('.form-control').removeClass('is-invalid');
            $('.invalid-feedback').text('');
            $('#menuForm').attr('action','{{ route("admin.menus.store") }}');// set form actions to strore route
            $('#menuModal').modal('show');
        });

        // Open modal for Edit
        $(document).on('click', '.edit-btn', function(e) {
            e.preventDefault();
            let url = $(this).data('url');// get the url to fetch menu data

            $.ajax({
                url: url,
                type: 'GET',// fetch menu data
                success: function(response) {
                    if (response.menu) {
                        const menu = response.menu;// get the menu data
                        fillForm(menu, '#menuForm');// fill the form with menu data
                        $('#menu_id').val(menu.id); 
                        $('#menuModalTitle').text('Edit Menu');
                        $('.form-control').removeClass('is-invalid is-valid');
                        $('.invalid-feedback').text('');
                        $('#menuForm').attr('action', response.url);// set form action to update route
                        
                        $('#menuModal').modal('show');
                    } else {
                        toastr.error('Menu not found');
                    }
                },
                error: function(xhr) {
                    toastr.error('Error loading menu data');
                }
            });
        });

        // Submit Add/Edit
        $('#menuForm').submit(function(e) {
            e.preventDefault();
            let id = $('#menu_id').val();// check if editing or adding
            let method = id ? 'PUT' : 'POST'; 
            let url = $('#menuForm').attr('action');// get the form action url
            
            $('.form-control').removeClass('is-invalid');// clear previous errors
            $('.invalid-feedback').text('');// clear previous errors
            
            $.ajax({
                url: url, // use the form action url for both add and edit 
                type: method,// determine method based on presenece of id
                data: $(this).serialize(),
                success: function(response) {
                    $('#menuModal').modal('hide');
                    table.ajax.reload();
                    toastr.success(response.message ); // show success message
                
                },
                error: function(xhr) {
                    if (xhr.status === 422) {
                        let errors = xhr.responseJSON.errors;// validation errors
                        $.each(errors, function(key, value) {
                            $('#' + key).addClass('is-invalid');// mark field as invalid
                            $('#' + key).siblings('.invalid-feedback').text(value[0]);// show first error message
                        });
                    } else {
                        toastr.error(xhr.responseJSON?.message || 'Error saving menu');
                    }
                }
            });
        });

        // Delete Menu
        $(document).on('click', '.delete-btn', function(e) {
            e.preventDefault();
            
            if (!confirm('Are you sure you want to delete this menu?')) {
                return;
            }
            
            let url = $(this).data('url');// get the delete url
            $.ajax({
                url: url,
                type: 'DELETE',
                data: {
                    _token: $('meta[name="csrf-token"]').attr('content')
                },
                success: function(response) {
                    table.ajax.reload();
                    toastr.success(response.message);
                },
                error: function(xhr) {
                    toastr.error(xhr.responseJSON?.message || 'Error deleting menu');
                }
            });
        });
    });
</script>
@endpush